<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAACAAAAA+AAAAXQAA
        AHgAAACKAAAAiwAAAH0AAABnAAAASgAAACkAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIg4GETsZCkdhKhCmhDoX26JJ
        Hu65VCT6w1on/8FaJ/+8ViX/r1Ah/JVBGvR3MhTnUSIN1CoSBqARBwNVAAAAGwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgkEBUceDD6ANxa4sVAi795x
        Nf/xh0n/95dW//ujZf/9r3D//bF2//2rbv/6nV7/9o5M/+p7Pf/SZC7/nkcc+GcrEeMwEwiuCwQCTAAA
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcYCRBsLhJ6sFAj6el8
        Pv/4ml3//a1x//yqbP/6n1//+JdV//aOTf/zi0n/84lJ//SMSv/2klD/+ZlX//qcXP/0jEv/3W0z/6FH
        HfdRIg3YGQoEdwAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLIQ0UizwYospi
        LPf3mVj//Kxw//umZv/4l1b/9pFQ//aSUP/2klD/9o9P//aOTP/0i0r/84hJ//KHRf/wgkH/8YJB//aO
        S//5l1b/84tK/8ZbJ/5sLRLnJhAGkgAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVCUPD5RC
        G6becDb9+6Vl//2vcf/4mFf/9pJQ//eTU//3k1L/95NS//aTUf/2kU//9o9N//SNS//zi0r/84hH//KG
        Rf/wg0L/734+/++AQP/4k1H/+JRS/9dnMP97NBXrJxEGkQAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAEYf
        DQSRPhmI3nA1/PumaP/7p2j/95NS//eTUv/3lFP/95NT//eUUv/2k1H/+Kp2//zWvv/++PX/+9W8//ak
        cv/ziUr/8oZF//CDQ//vgUL/7n4//+x7Pf/0jEr/95NS/9toMP9wLxPnGwsEdwAAAAwAAAAAAAAAAAAA
        AAAAAAAAhzwYS8phLPL7pWX/+6Zo//aSUf/3k1L/95RR//eUU//3lFH/9pNR/+N8Qf/no4H/////////
        ////////+9S8//OJSv/yh0b/8IND/++BQv/vfz//7Hw+/+t6O//0i0n/+JRS/8ZdKf1YJQ/YCAMBSwAA
        AAAAAAAAAAAAAHAyFQ25VSTR95ZW//yscP/3k1D/9pNS//eTUf/3k1H/9pNS//eTUf/2k1L/2G03//75
        9f/////////////////++PT/84tJ//KHRf/whUT/8IJA/+9/Pv/sfD3/7Hs9/+t5Ov/2kU//9ItL/6xN
        Ifg3FwmuAQEAGwAAAAAAAAAAnkYdYud5O//8rXD/95RV//aRUP/2k1D/9pJQ//aSUP/2klD/9pJQ//aS
        Uf/YbTb/56OA//////////////////vUvP/zi0n/8ohG//GDQ//wgUD/738+/+x8Pf/sezz/6nc6/+t5
        PP/4llP/43M3/3UyFOMQBwNUAAAAAHM1FgS9VybN+Jxd//uiYv/0jkz/9pFQ//aRTf/2kU//9pFP//aP
        T//2kU//9pFP//aRT//ZdUT/56J///749P/71b3/9qVz//OJR//yh0b/8YVE//CBQP/vfz//7Hw9/+x6
        PP/reDv/6HQ4//KGRf/2jk3/tFEj+DMWCaEAAAANokkfLt9vNfz8r3P/9pJQ//SPTf/0jk3/9I5N//SO
        TP/0jk3/9I5N//SOTP/0jUv/9I5M//SOTP/ieT7/4ng9/+J3Pf/zi0r/8ohH//KGRf/wg0P/74FB/+x+
        P//sejz/63g6/+l4Of/pdzn/6Xc4//mYVv/ebTP/YisR1AAAACq2VCRw8YdH//uoaf/0jEr/9I1M//SN
        S//0jEv/84xK//SNTP/2kU//9pJR//aTUf/2klD/9o9N//aOTP/0jkv/9IxK//OMSv/zi0r/8ohJ//GF
        Rf/vgEH/7Ho9/+p5O//qdzr/6HU4/+l1OP/lcjX/9o1L/+6AQf+MPhrnAAAASsFZJ634mln/+ZpZ//SM
        Sv/0i0r/84tJ//aRT//3l1b/+Jxc//mfX//4nV7/+JxZ//eYV//ZeEf/////////////////96x7//SO
        Tf/0kVD/9pJR//SOT//yh0b/7H4//+h1OP/lczb/53Q2/+VxNf/vgEH/9IxM/6xOIvQAAABozF8q2Pur
        bv/2klD/84hH//aRT//4mlz/+qhs//urbv/7q27/+qZp//miY//5nl7/95lY/9l2Q///////////////
        ///5w6H/9pJQ//aUU//3mFj/95pc//eZWf/2llb/8otL/+p8Pf/lcjX/5XA0/+p3Ov/5l1b/x10q/QAA
        AH3TYiv0/bV9//OJSv/2l1f/+6xx//y1ff/8t37//LB3//urcP/6pmj/+aJj//idXv/3mln/2G85//74
        9P////////////7w6P/3omr/9pZV//aXWP/3mln/+J1f//miZf/4oWX/9ppc//CGR//lczX/428z//uh
        X//VZS7/AAAAi9ZlLfz9uoL/+J5f//y5g//9vYz//bmD//y0ff/7r3b/+6xw//qoa//5omX/+Z5f//ed
        Xf/kf0X/5p54//////////////////749P/4s4T/95lY//ecXf/4nV//+J9i//mlaP/6qG7/+aZs//OP
        Uf/ldDb/+6Ni/9dpL/8AAACK12Ut7f21e//9vIf//cST//2+if/9uIb//LR+//uxd//7rXH/+6ps//ql
        aP/5oWP/+J5e//icXf/kgEX/56uM///////////////////////7yqn/+J5f//ihYf/4omX/+aZp//mo
        bP/6rXX/+q11//OUVf/7pWX/12cv/wAAAHjVZS7L/Kts//3Ajf/9wY///b6M//26h//8t4H//LN7//uv
        df/7q3D/+qdp//mlZv/5oWL/+Z9f//ieXf/kgUj/+8qp///////////////////////8zaz/+aNm//ml
        aP/5p2v/+apu//qscf/7s3v/+q11//qiY//OYSv7AAAAXdJkLpX5nV3//byG//3CkP/9wI3//bqH//y4
        gf/8tX3/+7F3//utc//7qm7/+qdp//mlZv/5o2X/+aJj//mhYv/lg0v/5pJj///59P//////////////
        ///7yaX/+adr//mqbv/6rHH/+611//uzev/7sXr/+JdX/7hWJu8AAAA+02YvUvOMS//9uoP//cKQ//3A
        j//9vIn//bmC//y1ff/7s3v/+7B2//uscf/7qm7/+qhr//qnaP/5pmX/+aVl//mlZf/lhUz/+7yQ////
        //////////////7u4v/6qnD/+6xz//uvdf/7sHf/+7WB//y0e//yiUr/m0gg3AAAACDTZi8V6Hk99v20
        ev/9voz//cGP//2+jP/9uob//LiC/9qFW//////////////////8vI3/+6pu//uqa//6qGz/+qhs//qo
        bP/liVD//////////////////vTs//utdf/7rXb/+7F6//uzff/7s33//K1x/+l6Pf93NximAAAACAAA
        AADbbDKe+Z1e//26hv/9wpD//cCN//2+jP/9vIb/2oFT//////////////////3fyP/7r3P/+61z//us
        c//6rHH/+6tw//vDmP/////////////////+7+T/+7F6//uze//7tH3//LeC//y1ff/4mln/xGAs70gh
        DkcAAAAAAAAAANtsMTLwhUT8/bN3//28h//9wY///b6M//29if/nlGD///Xu//////////////////7l
        0v/8u4n/+7B2//uvdv/9z63///r2//////////////////3Sr//7tXv/+7d+//y6g//7tX7//K9z//CF
        Rf+YRyC4JBEHEQAAAAAAAAAA02gwAd9wNZL4mVj//byD//y9jP/9wI3//b6M//29if/nm27/////////
        ///////////////////////////////////////////////////+69z//Lh+//y4gv/8uYb//LmC//y4
        fv/4nFz/x2Iu6VUoEj0AAAAAAAAAAAAAAAAAAAAA3m4zFuR1Os36pWX//bqD//2+jP/9wI3//b6N//28
        jP/onXP///r3/////////////////////////////////////////////ujV//y6g//8uoP//LqG//y5
        hv/8uIH/+6Zo/91zOveGQB16FwsFBQAAAAAAAAAAAAAAAAAAAAAAAAAA3G40Oe2AQej7p2j//bqC//y8
        h//9vo3//b6M//29jP/nlGH/6KaC///y5////////////////////////dq+//3Opv/8uof//LyJ//y9
        jP/8uob//Lh+//uqbP/thET9p1ImokUhDxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA33E2SOyB
        Q+j7pWb//bqD//y5gv/9wI3//b6M//2+jP/9voz/55Rj/+eUYf/nlGH/55Rh/+eUYf/9vYn//b2J//2+
        jP/9voz//LqD//25gf/7qmz/7oVG/LRaKqVeLhYUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA33A3OeV7PM75nFz//bR3//23gf/8vIf//b6N//29jP/9vYz//b6M//29jP/9voz//b6M//2+
        jP/9vYn//LqH//y3fv/9tXv/+qJi/+N7PfOwWCqHZjMYDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA3XI3FuR3O5HziUr9+qFi//20ev/9t37//LV+//y4g//8vIb//byM//y6
        h//8uYP//Ld+//y3fv/9tXv/+6Zm//SNTf/WcDfQpFQoS1QrFQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2XA2Ad90NzLkdjqe7oRD9/eWVf/7o2P//K9x//23
        fv/9vIP//bmB//ywdf/7pmb/+JhX//GISfzaczjNvWAuY4VEIA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeczcV3nQ5UuJ1
        OpXldzrK6Hk77Op6PPzoeTr05HY62NpxN63QbTVwvGEvLolGIgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABgAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//gAA///AA/8=
</value>
  </data>
</root>